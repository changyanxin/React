{"version":3,"sources":["Todolist/Storage.js","Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","index.js"],"names":["storage","set","key","value","localStorage","setItem","JSON","stringify","get","parse","getItem","remove","removeItem","Todoinput","props","handleInput","e","keyCode","console","log","target","addData","bind","className","ref","onKeyDown","this","Component","Todoing","todo","templist","doing","done","i","length","checked","map","type","onClick","checkboxChage","title","removeData","onChange","Todolist","data","tempList","state","list","push","setState","splice","todolist","ReactDOM","render","document","querySelector"],"mappings":"6KAkBeA,EAlBH,CAGRC,IAHQ,SAGJC,EAAIC,GAEJC,aAAaC,QAAQH,EAAII,KAAKC,UAAUJ,KAE5CK,IAPQ,SAOJN,GAEA,OAAOI,KAAKG,MAAML,aAAaM,QAAQR,KAG3CS,OAZQ,SAYDT,GAEHE,aAAaQ,WAAWV,K,OCZXW,E,YACjB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAKVC,YAAY,SAACC,GAEO,IAAbA,EAAEC,UACDC,QAAQC,IAAIH,EAAEI,OAAOjB,OACrB,EAAKW,MAAMO,QAAQL,EAAEI,OAAOjB,OAC5Ba,EAAEI,OAAOjB,MAAM,KATnB,EAAKY,YAAc,EAAKA,YAAYO,KAAjB,gBAFL,E,sEAed,OACI,6BACI,4BAAQC,UAAU,SAAlB,YACa,2BAAOC,IAAI,QAAQC,UAAWC,KAAKX,oB,GAnBzBY,aCClBC,E,iLAQb,IAPM,IAAD,OAEAC,EAAQH,KAAKZ,MAAbe,KACDC,EAAWD,EAEXE,EAAQ,EACRC,EAAO,EACHC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IACN,GAAvBH,EAASG,GAAGE,QACXJ,IAEAC,IAGR,OACI,6BACI,uDAEI,8BAAOD,IAEX,6BAESF,GAAQ,IAAIO,KAAI,SAACjC,EAAMD,GAEpB,IAAIC,EAAMgC,QACN,OACI,wBAAIjC,IAAKA,GACL,2BAAOmC,KAAK,WAAWF,QAAShC,EAAMgC,QACtCG,QAAS,kBAAI,EAAKxB,MAAMyB,cAAcrC,MAErCC,EAAMqC,MAJX,KAKI,4BAAQF,QAAS,kBAAI,EAAKxB,MAAM2B,WAAWvC,KAA3C,qBAUxB,6DAEI,8BAAO8B,IAGX,6BAESH,GAAQ,IAAIO,KAAI,SAACjC,EAAMD,GACpB,GAAGC,EAAMgC,QACL,OACI,wBAAIjC,IAAKA,GACL,2BAAOmC,KAAK,WAAWF,QAAShC,EAAMgC,QACtCO,SAAU,kBAAI,EAAK5B,MAAMyB,cAAcrC,MAEtCC,EAAMqC,MAJX,KAKI,4BAAQF,QAAS,kBAAI,EAAKxB,MAAM2B,WAAWvC,KAA3C,0B,GAzDHyB,aCChBgB,E,YACjB,WAAY7B,GAAQ,IAAD,8BACf,4CAAMA,KAQVO,QAAQ,SAACuB,GACD,IAAIJ,EAAMI,EACNC,EAAS,EAAKC,MAAMC,KACxB7B,QAAQC,IAAIqB,EAAMK,GAClBA,EAASG,KAAK,CACVR,MAAMA,EACNL,SAAQ,IAEZ,EAAKc,SAAS,CAEVF,KAAKF,IAET7C,EAAQC,IAAI,WAAW4C,IArBZ,EAuBnBN,cAAc,SAACrC,GACXgB,QAAQC,IAAI,OAEZ,IAAI0B,EAAS,EAAKC,MAAMC,KACxB7B,QAAQC,IAAI0B,GACZA,EAAS3C,GAAKiC,SAASU,EAAS3C,GAAKiC,QACrC,EAAKc,SAAS,CACVF,KAAKF,IAIT7C,EAAQC,IAAI,WAAW4C,IAlCR,EAqCnBJ,WAAW,SAACvC,GACR,IAAI2C,EAAS,EAAKC,MAAMC,KACxBF,EAASK,OAAOhD,EAAI,GACpB,EAAK+C,SAAS,CACVF,KAAKF,IAGT7C,EAAQC,IAAI,WAAW4C,IA1CvB,EAAKC,MAAQ,CACTC,KAAK,IAHM,E,iFAiDf,IAAII,EAASnD,EAAQQ,IAAI,YACtB2C,GACCzB,KAAKuB,SAAS,CAEVF,KAAKI,M,+BAMb,OAEI,6BACG,kBAAC,EAAD,CAAW9B,QAASK,KAAKL,UACzB,kBAAC,EAAD,CAASA,QAASK,KAAKL,QAASQ,KAAMH,KAAKoB,MAAMC,KACjDN,WAAYf,KAAKe,WAAYF,cAAeb,KAAKa,qB,GAjE1BZ,aCItCyB,IAASC,OAEF,kBAAC,EAAD,MAEAC,SAASC,cAAc,W","file":"static/js/main.ee2283e3.chunk.js","sourcesContent":["var storage={\r\n\r\n\r\n    set(key,value){\r\n\r\n        localStorage.setItem(key,JSON.stringify(value));\r\n    },\r\n    get(key){\r\n\r\n        return JSON.parse(localStorage.getItem(key));\r\n\r\n    },\r\n    remove(key){\r\n\r\n        localStorage.removeItem(key)\r\n    }\r\n};\r\n\r\nexport default storage;","import React, { Component } from 'react'\r\n\r\nexport default class Todoinput extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleInput = this.handleInput.bind(this);\r\n    }\r\n    \r\n    // 不考虑this的情况\r\n    handleInput=(e)=>{\r\n        //绑定this，事件处理函数写成箭头函数，或者用bind\r\n        if(e.keyCode == 13){\r\n            console.log(e.target.value);\r\n            this.props.addData(e.target.value);\r\n            e.target.value='';\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"title\">\r\n                    TodoList:<input ref=\"title\" onKeyDown={this.handleInput}/> \r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport default class Todoing extends Component {\r\n    render() {\r\n        // this.state.list.\r\n        var {todo} = this.props;\r\n        var templist = todo;\r\n        // var arr = list.state.list;\r\n        var doing = 0;\r\n        var done = 0;\r\n        for(var i = 0; i < templist.length; i++){\r\n            if(templist[i].checked == false){\r\n                doing++;\r\n            }else{\r\n                done++;\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>\r\n                    待办事项\r\n                    <span>{doing}</span>\r\n                </h2>\r\n                <ul>\r\n                    {\r\n                        (todo || []).map((value,key)=>{\r\n\r\n                            if(!value.checked){\r\n                                return (\r\n                                    <li key={key}>\r\n                                        <input type=\"checkbox\" checked={value.checked} \r\n                                        onClick={()=>this.props.checkboxChage(key)} />\r\n\r\n                                        {value.title}-- \r\n                                        <button onClick={()=>this.props.removeData(key)}>删除</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </ul>           \r\n\r\n\r\n\r\n                <h2>\r\n                    已完成事项\r\n                    <span>{done}</span>\r\n                </h2>\r\n\r\n                <ul>\r\n                    {\r\n                        (todo || []).map((value,key)=>{\r\n                            if(value.checked){\r\n                                return (\r\n                                    <li key={key}>\r\n                                        <input type=\"checkbox\" checked={value.checked} \r\n                                        onChange={()=>this.props.checkboxChage(key)} />\r\n\r\n                                        {value.title}-- \r\n                                        <button onClick={()=>this.props.removeData(key)}>删除</button>\r\n                                    </li>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </ul>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react';\r\nimport storage from './Storage';\r\nimport Todoinput from './Todoinput'\r\nimport Todoing from './Todoing'\r\nexport default class Todolist extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            list:[\r\n             \r\n            ]\r\n        };\r\n    }   \r\n\r\n    addData=(data)=>{\r\n            let title=data;\r\n            let tempList=this.state.list;\r\n            console.log(title,tempList);\r\n            tempList.push({\r\n                title:title,\r\n                checked:false\r\n            })\r\n            this.setState({\r\n\r\n                list:tempList\r\n            })\r\n            storage.set('todolist',tempList); \r\n    }\r\n    checkboxChage=(key)=>{\r\n        console.log(\"000\");\r\n        // alert('111');\r\n        let tempList=this.state.list;\r\n        console.log(tempList);\r\n        tempList[key].checked=!tempList[key].checked;\r\n        this.setState({\r\n            list:tempList\r\n        })\r\n\r\n        //执行缓存数据\r\n        storage.set('todolist',tempList);\r\n\r\n    }\r\n    removeData=(key)=>{\r\n        let tempList=this.state.list;\r\n        tempList.splice(key,1);\r\n        this.setState({\r\n            list:tempList\r\n        })\r\n        //执行缓存数据\r\n        storage.set('todolist',tempList);\r\n    }\r\n    //生命周期函数  页面加载就会触发\r\n    componentDidMount(){\r\n        //获取缓存的数据\r\n        var todolist=storage.get('todolist');  \r\n        if(todolist){\r\n            this.setState({\r\n\r\n                list:todolist\r\n            })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n               <Todoinput addData={this.addData}/>\r\n               <Todoing addData={this.addData} todo={this.state.list} \r\n               removeData={this.removeData} checkboxChage={this.checkboxChage}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React,{Fragment,Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Todolist from './Todolist/Todolist';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n      \r\n       <Todolist/>,\r\n       \r\n       document.querySelector(\"#root\")\r\n              \r\n);\r\n\r\n\r\n"],"sourceRoot":""}